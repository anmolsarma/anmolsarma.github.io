<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Anmol Sarma</title>
    <link>https://www.anmolsarma.in/</link>
    
    <language>en-in</language>
    
    
    <atom:link href="https://www.anmolsarma.in/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Stop Memsetting Structures</title>
      <link>https://www.anmolsarma.in/post/stop-struct-memset/</link>
      <pubDate>Sat, 27 Apr 2019 23:59:42 +0530</pubDate>
      
      <guid>https://www.anmolsarma.in/post/stop-struct-memset/</guid>
      <description>&lt;p&gt;&lt;em&gt;TL;DR: Use C99&amp;rsquo;s designated initializers instead. Because it&amp;rsquo;s 2019!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Edit:&lt;/strong&gt; This post was discussed on &lt;a href=&#34;https://news.ycombinator.com/item?id=19766930&#34;&gt;Hacker News&lt;/a&gt;, &lt;a href=&#34;https://lobste.rs/s/7aqidd/stop_memsetting_structures&#34;&gt;Lobste.rs&lt;/a&gt; and &lt;a href=&#34;https://www.reddit.com/r/C_Programming/comments/bi23w6/stop_memsetting_structures/&#34;&gt;/r/c_programming&lt;/a&gt;. It has been updated to address some of the concerns raised by commenters.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;One of the little things that annoy me when reading code is the unnecessary use of &lt;code&gt;memset()&lt;/code&gt; to zero-out a &lt;code&gt;struct&lt;/code&gt;. Something I see frequently in networking code that uses the BSD sockets API.&lt;/p&gt;

&lt;p&gt;Consider this snippet of code from the venerable &lt;a href=&#34;https://beej.us/guide/bgnet/html/single/bgnet.html#simpleserver&#34;&gt;Beej&amp;rsquo;s Guide to Network Programming&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; addrinfo hints;
...

memset(&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;hints, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt; hints);
hints.ai_family &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; AF_UNSPEC;
hints.ai_socktype &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; SOCK_STREAM;
hints.ai_flags &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; AI_PASSIVE; &lt;span style=&#34;color:#666&#34;&gt;//&lt;/span&gt; use my IP&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, we first declare a struct, memset it to zero and then initialize the fields we are interested in. This is all fine except for the fact that the same result can be achieved with the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; addrinfo hints &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; {
	.ai_family &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; AF_UNSPEC,
	.ai_socktype &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; SOCK_STREAM,
	.ai_flags &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; AI_PASSIVE &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// use my IP
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;};&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which in my humble and very subjective opinion looks much cleaner.&lt;/p&gt;

&lt;p&gt;The second version uses a feature standardized in C99 called designated initializers. This allows initializing elements of an aggregate type in any order by specifying the array indices or structure field names. Elements that are not specified are initialized as if they are static objects: arithmetic types are initialized to &lt;code&gt;0&lt;/code&gt;; pointers are initialized to &lt;code&gt;NULL&lt;/code&gt;. This is also presumably less expensive than a &lt;code&gt;memset()&lt;/code&gt; as it avoids clearing memory that will be assigned to.&lt;/p&gt;

&lt;p&gt;If the structure has padding, using designated initializers will not initialize it to zero.  This is not &lt;em&gt;usually&lt;/em&gt; a problem. However, this may inadvertently lead to information leaks when passing a structure from a more privileged context to a less privileged one: &lt;a href=&#34;https://lwn.net/Articles/417989/&#34;&gt;Like when passing memory from the kernel back to userspace&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now to be fair to Beej, he first wrote &lt;em&gt;The Guide&lt;/em&gt; in 1995. But if you&amp;rsquo;re writing new code in 2019, there is really no reason to not use designated initializers&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:-&#34;&gt;&lt;a href=&#34;#fn:-&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. Except to specifically avoid memory disclosures. &lt;em&gt;Cue the Rust Evangelism Strike Force chiming in to say that there is really no reason to be writing new C code in 2019.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;While we&amp;rsquo;re on the topic of little annoyances, another pattern I often see is using a variable just to pass what is effectively a literal to &lt;code&gt;setsockopt()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; yes&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;;
setsockopt(listener, SOL_SOCKET, SO_REUSEADDR, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;yes, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt; (yes)) ;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Which can instead be written as:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;setsockopt(listener, SOL_SOCKET, SO_REUSEADDR, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;) {&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;}, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This uses yet another C99 feature called compound literals. If the magic 1 value bothers you, you can always:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;setsockopt(listener, SOL_SOCKET, SO_REUSEADDR, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;) {&lt;span style=&#34;color:#a2f&#34;&gt;true&lt;/span&gt;}, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;));&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And finally, there is absolutely no reason to check if a pointer is &lt;code&gt;NULL&lt;/code&gt; just before calling &lt;code&gt;free()&lt;/code&gt; on it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a2f&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;!=&lt;/span&gt; ptr)
	free(ptr);&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Quoting the &lt;a href=&#34;http://www.open-std.org/JTC1/SC22/wg14/www/docs/n1124.pdf&#34;&gt;standard Section 7.20.3.2 (p. 313)&lt;/a&gt;: &lt;em&gt;If ptr is a null pointer, no action occurs.&lt;/em&gt; If a system deviates from this expectation, it is clearly evil. It is advised to &lt;em&gt;Kill It With Fire&lt;/em&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:-&#34;&gt;If you were relying on &lt;code&gt;memcmp()&lt;/code&gt; to compare structs, that will probably no longer work. But you knew what you were getting yourself into, didn&amp;rsquo;t you?

 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:-&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Single-stepping through the Kernel</title>
      <link>https://www.anmolsarma.in/post/single-step-kernel/</link>
      <pubDate>Sun, 03 Feb 2019 18:57:45 +0530</pubDate>
      
      <guid>https://www.anmolsarma.in/post/single-step-kernel/</guid>
      <description>

&lt;p&gt;There may come a time in a system programmer&amp;rsquo;s life when she needs to leave the civilized safety of the userland and confront the unspeakable horrors that dwell in the depths of the Kernel space. While &lt;a href=&#34;https://lkml.org/lkml/2000/9/6/65&#34;&gt;higher beings might pour scorn&lt;/a&gt; on the very idea of a Kernel debugger, us lesser mortals may have no other recourse but to single-step through Kernel code when the rivers begin to run dry. This guide will help you do just that. We hope you never actually have to.&lt;/p&gt;

&lt;p&gt;Ominous sounding intro-bait notwithstanding, setting up a virtual machine for Kernel debugging isn&amp;rsquo;t really that difficult.  It only needs a bit of preparation. If you just want a copypasta, &lt;a href=&#34;#copypasta&#34;&gt;skip to the end&lt;/a&gt;. If you&amp;rsquo;re interested in the predicaments involved and how to deal with them, read on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;N.B.:&lt;/strong&gt; &amp;ldquo;But which kernel are you talking about?&amp;rdquo;, some heathens may invariably ask when it is obvious that Kernel with a capital K refers to the &lt;a href=&#34;https://www.kernel.org/&#34;&gt;One True Kernel&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;building-the-kernel&#34;&gt;Building the Kernel&lt;/h3&gt;

&lt;p&gt;Using a minimal Kernel configuration instead of the kitchen-sink one that distributions usually ship will make life a lot easier. You will first need to grab the source code for the Kernel you are interested in. We will use the latest Kernel release tarball from &lt;a href=&#34;https://www.kernel.org/&#34;&gt;kernel.org&lt;/a&gt;, which at the time of writing is &lt;a href=&#34;https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.20.6.tar.xz&#34;&gt;4.20.6&lt;/a&gt;. Inside the extracted source directory, invoke the following:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;make defconfig
make kvmconfig
make -j4  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will build a minimal Kernel image that can be booted in QEMU like so:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -kernel linux-4.20.6/arch/x86/boot/bzImage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should bring up an ancient-looking window with a cryptic error message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.anmolsarma.in/images/kernel_panic.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;You could try pasting the error message into &lt;del&gt;Google&lt;/del&gt; a search engine: Except for the fact that you can&amp;rsquo;t select the text in the window. And frankly, the window just looks annoying! So, ignoring the actual error for a moment, let&amp;rsquo;s try to get QEMU to print to the console instead of a spawning a new graphical window:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -kernel -nographic linux-4.20.6/arch/x86/boot/bzImage&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;QEMU spits out a single line:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64: warning: TCG doesn&lt;span style=&#34;&#34;&gt;&amp;#39;&lt;/span&gt;t support requested feature: CPUID.01H:ECX.vmx &lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;bit &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://hisham.hm/htop/&#34;&gt;Htop&lt;/a&gt; tells me QEMU is using 100% of a CPU and my laptop fan agrees. But there is no output whatsoever and &lt;code&gt;Ctrl-c&lt;/code&gt; doesn&amp;rsquo;t work! What &lt;a href=&#34;https://superuser.com/a/1211516&#34;&gt;does work&lt;/a&gt;, however, is pressing &lt;code&gt;Ctrl-a&lt;/code&gt; and then hitting &lt;code&gt;x&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;QEMU: Terminated&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Turns out that by passing &lt;code&gt;-nographic&lt;/code&gt;, we have plugged out QEMU&amp;rsquo;s &lt;em&gt;virtual&lt;/em&gt; monitor. Now, to actually see any output, we need to tell the Kernel to write to a &lt;a href=&#34;https://www.kernel.org/doc/html/v4.20/admin-guide/serial-console.html&#34;&gt;serial port&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -nographic -kernel linux-4.20.6/arch/x86/boot/bzImage -append &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;console=ttyS0&amp;#34;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It worked! Now we can read error message in all its glory:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.333008&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; VFS: Cannot open root device &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;(null)&amp;#34;&lt;/span&gt; or unknown-block&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,0&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;: error -6
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.334024&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; Please append a correct &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;root=&amp;#34;&lt;/span&gt; boot option; here are the available partitions:
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.335152&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; 0b00         &lt;span style=&#34;color:#666&#34;&gt;1048575&lt;/span&gt; sr0 
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.335153&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  driver: sr
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.335996&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,0&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.337104&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; CPU: &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt; PID: &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; Comm: swapper/0 Not tainted &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;.20.6 &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;#1
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.337901&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; Hardware name: QEMU Standard PC &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;i440FX + PIIX, &lt;span style=&#34;color:#666&#34;&gt;1996&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;, BIOS &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.10.2-1ubuntu1 &lt;span style=&#34;color:#666&#34;&gt;04&lt;/span&gt;/01/2014
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.339091&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; Call Trace:
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.339437&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  dump_stack+0x46/0x5b
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.339888&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  panic+0xf3/0x248
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.340295&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  mount_block_root+0x184/0x248
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.340838&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  ? set_debug_rodata+0xc/0xc
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.341357&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  mount_root+0x121/0x13f
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.341837&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  prepare_namespace+0x130/0x166
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.342378&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  kernel_init_freeable+0x1ed/0x1ff
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.342965&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  ? rest_init+0xb0/0xb0
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.343427&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  kernel_init+0x5/0x100
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.343888&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;  ret_from_fork+0x35/0x40
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.344526&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; Kernel Offset: 0x1200000 from 0xffffffff81000000 &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;relocation range: 0xffffffff80000000-0xffffffffbfffffff&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;.345956&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt; ---&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt; end Kernel panic - not syncing: VFS: Unable to mount root fs on unknown-block&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;,0&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;---&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So, the Kernel didn&amp;rsquo;t find a root filesystem to kick off the user mode and panicked. Lets fix that by creating a root filesystem image.&lt;/p&gt;

&lt;h3 id=&#34;creating-a-root-filesystem&#34;&gt;Creating a Root Filesystem&lt;/h3&gt;

&lt;p&gt;Start by creating an empty image:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-img create rootfs.img 1G&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And then format it as &lt;a href=&#34;https://en.wikipedia.org/wiki/Ext4&#34;&gt;&lt;code&gt;ext4&lt;/code&gt;&lt;/a&gt; and mount it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;mkfs.ext4 rootfs.img
mkdir mnt
sudo mount -o loop rootfs.img mnt/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can populate it using &lt;a href=&#34;https://wiki.debian.org/Debootstrap&#34;&gt;&lt;code&gt;debootstrap&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo debootstrap bionic mnt/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create a root filesystem based on Ubuntu 18.04 Bionic Beaver. Of course, feel free to replace &lt;code&gt;bionic&lt;/code&gt; with any release that you prefer.&lt;/p&gt;

&lt;p&gt;And unmount the filesystem once we&amp;rsquo;re done. &lt;strong&gt;This is important if you want to avoid corrupted images!&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo umount mnt&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now boot the Kernel with our filesystem. We need to tell QEMU to use our image as a virtual hard drive and we also need to tell the Kernel to use the hard drive as the root filesystem:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -nographic -kernel linux-4.20.6/arch/x86/boot/bzImage -hda rootfs.img -append &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;root=/dev/sda console=ttyS0&amp;#34;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This time the Kernel shouldn&amp;rsquo;t panic and you should eventually see a login prompt. We could have setup a user while creating the filesystem but it&amp;rsquo;s annoying to have to login each time we boot up the VM. Let&amp;rsquo;s enable auto login as root instead.&lt;/p&gt;

&lt;p&gt;Terminate QEMU (&lt;code&gt;Ctrl-c&lt;/code&gt;, &lt;code&gt;x&lt;/code&gt;), mount the filesystem image again and then create the configuration folder structure:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo mount -o loop rootfs.img mnt/
sudo mkdir -p mnt/etc/systemd/system/serial-getty@ttyS0.service.d&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add the following lines to &lt;code&gt;mnt/etc/systemd/system/serial-getty@ttyS0.service.d/autologin.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#b8860b&#34;&gt;ExecStart&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;
&lt;span style=&#34;color:#b8860b&#34;&gt;ExecStart&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;-/sbin/agetty --noissue --autologin root %I &lt;span style=&#34;color:#b8860b&#34;&gt;$TERM&lt;/span&gt;
&lt;span style=&#34;color:#b8860b&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;idle&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make sure to unmount the filesystem and then boot the Kernel again. This time you should be automatically logged in.&lt;/p&gt;

&lt;p&gt;Gracefully shutdown the VM:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;halt -p&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;attaching-a-debugger&#34;&gt;Attaching a debugger&lt;/h3&gt;

&lt;p&gt;Let&amp;rsquo;s rebuild the Kernel with debugging symbols enabled:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./scripts/config -e CONFIG_DEBUG_INFO
make -j4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, boot the Kernel again, this time passing the &lt;code&gt;-s&lt;/code&gt; flag which will make QEMU listen on TCP port 1234:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -nographic -kernel linux-4.20.6/arch/x86/boot/bzImage -hda rootfs.img -append &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;root=/dev/sda console=ttyS0&amp;#34;&lt;/span&gt; -s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, in another terminal start gdb and attach to QEMU:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;gdb ./linux-4.20.6/vmlinux 
...
Reading symbols from ./linux-4.20.6/vmlinux...done.
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; target remote :1234
Remote debugging using :1234
0xffffffff95a2f8f4 in ?? &lt;span style=&#34;color:#666&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can set a breakpoint on Kernel function, for instance &lt;code&gt;do_sys_open()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; b do_sys_open 
Breakpoint &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt; at 0xffffffff811b2720: file fs/open.c, line &lt;span style=&#34;color:#666&#34;&gt;1049&lt;/span&gt;.
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; c
Continuing.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now try opening a file in VM which should result in &lt;code&gt;do_sys_open()&lt;/code&gt; getting invoked&amp;hellip; And nothing happens?! The breakpoint in gdb is not hit. This due to a Kernel security feature called &lt;a href=&#34;https://lwn.net/Articles/569635/&#34;&gt;KASLR&lt;/a&gt;. KASLR can be disabled at boot time by adding &lt;code&gt;nokaslr&lt;/code&gt; to the Kernel command line arguments. But, let&amp;rsquo;s actually rebuild the Kernel without KASLR. While we are at it, let&amp;rsquo;s also disable loadable module support as well which will save us the trouble of copying the modules to the filesystem.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;./scripts/config -e CONFIG_DEBUG_INFO -d CONFIG_RANDOMIZE_BASE -d CONFIG_MODULES
make olddefconfig &lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Resolve dependencies
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;make -j4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reboot the Kernel again, attach gdb, set a breakpoint on &lt;code&gt;do_sys_open()&lt;/code&gt; and run &lt;code&gt;cat /etc/issue&lt;/code&gt; in the guest. This time the breakpoint should be hit. But probably not where you expected:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;Breakpoint &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, do_sys_open &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;dfd&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;-100, &lt;span style=&#34;color:#b8860b&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;0x7f96074ad428 &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;/etc/ld.so.cache&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;557056&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;mode&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; at fs/open.c:1049
&lt;span style=&#34;color:#666&#34;&gt;1049&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, do_sys_open &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;dfd&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;-100, &lt;span style=&#34;color:#b8860b&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;0x7f96076b5dd0 &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;/lib/x86_64-linux-gnu/libc.so.6&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;557056&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;mode&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; at fs/open.c:1049
&lt;span style=&#34;color:#666&#34;&gt;1049&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; c
Continuing.

Breakpoint &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, do_sys_open &lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#b8860b&#34;&gt;dfd&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;-100, &lt;span style=&#34;color:#b8860b&#34;&gt;filename&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;0x7ffe9e630e8e &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;/etc/issue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;flags&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;32768&lt;/span&gt;, &lt;span style=&#34;color:#b8860b&#34;&gt;mode&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; at fs/open.c:1049
&lt;span style=&#34;color:#666&#34;&gt;1049&lt;/span&gt;    &lt;span style=&#34;color:#666&#34;&gt;{&lt;/span&gt;
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Congratulations! From this point, you can single-step away to your heart&amp;rsquo;s content.&lt;/p&gt;

&lt;p&gt;By default, the root filesystem is mounted read only. If you want to be able to write to it, add &lt;code&gt;rw&lt;/code&gt; after &lt;code&gt;root=/dev/sda&lt;/code&gt; in the Kernel parameters:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -nographic -kernel linux-4.20.6/arch/x86/boot/bzImage -hda rootfs.img -append &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;root=/dev/sda rw console=ttyS0&amp;#34;&lt;/span&gt; -s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&#34;bonus-networking&#34;&gt;Bonus: Networking&lt;/h3&gt;

&lt;p&gt;You can create a point to point link between the QEMU VM and the host using a &lt;a href=&#34;https://en.wikipedia.org/wiki/TUN/TAP&#34;&gt;TAP interface&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First install &lt;code&gt;tunctl&lt;/code&gt; and create a persistent TAP interface to avoid running QEMU as root:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt install uml-utilities
sudo sudo tunctl -u &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;$(&lt;/span&gt;id -u&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;)&lt;/span&gt;
Set &lt;span style=&#34;color:#b44&#34;&gt;&amp;#39;tap0&amp;#39;&lt;/span&gt; persistent and owned by uid &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;
sudo ip link &lt;span style=&#34;color:#a2f&#34;&gt;set&lt;/span&gt; tap0 up&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now launch QEMU with a virtual &lt;code&gt;e1000&lt;/code&gt; virtual interface connected the host&amp;rsquo;s tap0 interface:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;qemu-system-x86_64 -nographic -device e1000,netdev&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;net0 -netdev tap,id&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;net0,ifname&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;tap0 -kernel linux-4.20.6/arch/x86/boot/bzImage -hda rootfs.img -append &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;root=/dev/sda rw console=ttyS0&amp;#34;&lt;/span&gt; -s&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the guest boots up, bring the network interface up:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ip link &lt;span style=&#34;color:#a2f&#34;&gt;set&lt;/span&gt; enp0s3 up
ip a
&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu &lt;span style=&#34;color:#666&#34;&gt;65536&lt;/span&gt; qdisc noqueue state UNKNOWN group default qlen &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;
    link/loopback &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:00:00:00:00:00 brd &lt;span style=&#34;color:#666&#34;&gt;00&lt;/span&gt;:00:00:00:00:00
    inet &lt;span style=&#34;color:#666&#34;&gt;127&lt;/span&gt;.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host 
       valid_lft forever preferred_lft forever
&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;: enp0s3: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu &lt;span style=&#34;color:#666&#34;&gt;1500&lt;/span&gt; qdisc pfifo_fast state UP group default qlen &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;
    link/ether &lt;span style=&#34;color:#666&#34;&gt;52&lt;/span&gt;:54:00:12:34:56 brd ff:ff:ff:ff:ff:ff
    inet6 fe80::5054:ff:fe12:3456/64 scope link 
       valid_lft forever preferred_lft forever&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;QEMU and the host can now communicate using their IPv6 Link-local addresses. After all, it is 2019.&lt;/p&gt;

&lt;h3 id=&#34;copypasta&#34;&gt;Copypasta&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Building a minimal debuggable Kernel
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;make defconfig
make kvmconfig
./scripts/config -e CONFIG_DEBUG_INFO -d CONFIG_RANDOMIZE_BASE -d CONFIG_MODULES
make olddefconfig
make -j4


&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Create root filesystem
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;qemu-img create rootfs.img 1G
mkfs.ext4 rootfs.img
mkdir mnt
sudo mount -o loop rootfs.img mnt/
sudo debootstrap bionic mnt/

&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Add following lines to mnt/etc/systemd/system/serial-getty@ttyS0.service.d/autologin.conf
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# START
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color:#666&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color:#b8860b&#34;&gt;ExecStart&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;
&lt;span style=&#34;color:#b8860b&#34;&gt;ExecStart&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;-/sbin/agetty --noissue --autologin root %I &lt;span style=&#34;color:#b8860b&#34;&gt;$TERM&lt;/span&gt;
&lt;span style=&#34;color:#b8860b&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt;idle
&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# END
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Unmount the filesystem
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;sudo umount mnt

&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Boot Kernel with root file system in QEMU
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;qemu-system-x86_64 -nographic -kernel linux-4.20.6/arch/x86/boot/bzImage -hda rootfs.img -append &lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;root=/dev/sda rw console=ttyS0&amp;#34;&lt;/span&gt; -s

&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;# Attach gdb
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;gdb ./linux-4.20.6/vmlinux 
&lt;span style=&#34;color:#666&#34;&gt;(&lt;/span&gt;gdb&lt;span style=&#34;color:#666&#34;&gt;)&lt;/span&gt; target remote :1234&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Books I Read in 2017</title>
      <link>https://www.anmolsarma.in/post/books-2017/</link>
      <pubDate>Wed, 09 May 2018 20:28:40 +0530</pubDate>
      
      <guid>https://www.anmolsarma.in/post/books-2017/</guid>
      <description>

&lt;h3 id=&#34;the-god-of-small-things-by-arundhati-roy&#34;&gt;The God of Small Things by Arundhati Roy&lt;/h3&gt;

&lt;p&gt;A beautifully heart-rending exploration of the human condition. The prose is almost lyrical and the narrative is dreamlike and completely immersing. All the little details add up to symbolise something bigger. The book is part political satire, part social commentary part psychological drama and part fairy tale. In the midst of all this, it manages to capture the thought process of children like no other book.  Would highly recommend.&lt;/p&gt;

&lt;h3 id=&#34;how-to-win-friends-and-influence-people-by-dale-carnegie&#34;&gt;How To Win Friends And Influence People by Dale Carnegie&lt;/h3&gt;

&lt;p&gt;The original &amp;ldquo;self-help&amp;rdquo; book. Carnegie offers solid advice for dealing with business relationships and public speaking. While some of it may be obvious, it’s especially useful for introverts and people with social anxiety because it outlines a few simple techniques that make meeting new people a little easier. However, some of the techniques for conflict resolution come across as outright manipulative. I doubt it will be life-changing but if you&amp;rsquo;re going to read a self-help book, you could certainly do a lot worse than &lt;em&gt;How to Win Friends&lt;/em&gt;. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-martian-by-andy-weir&#34;&gt;The Martian by Andy Weir&lt;/h3&gt;

&lt;p&gt;While the movie was great, the book is just so much better. A gripping page-turner with a focus on realism and scientific accuracy. Anyone even remotely interested in science and technology would find an immensely relatable hero in Mark Watney. To top off the exciting plot, the writing is crisp, the pacing perfect and the dialogue is brilliant and funny. Would highly recommend.&lt;/p&gt;

&lt;h3 id=&#34;restart-the-last-chance-for-the-indian-economy-by-mihir-sharma&#34;&gt;Restart: The last chance for the Indian Economy by Mihir Sharma&lt;/h3&gt;

&lt;p&gt;A blunt, irreverent and acerbic account of the long list of policy blunders which ail India&amp;rsquo;s economy. Probably the most well stated and researched rant you&amp;rsquo;ll ever read. The book is filled with anecdotes that are both insightful and funny. While Mihir Sharma jumps the gun with his suggestion in a few places, the work makes it absolutely clear that he knows what he&amp;rsquo;s talking about. He also breaks from the tradition of lionising India&amp;rsquo;s IT and pharma industries and calls them out for what they are. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-curious-incident-of-the-dog-in-the-night-time-by-mark-haddon&#34;&gt;The Curious Incident of the Dog in the Night-Time by Mark Haddon&lt;/h3&gt;

&lt;p&gt;A touching and poignant account of an autistic savant&amp;rsquo;s attempt to solve mysteries. The book does a wonderful job of capturing the perspective of someone with a thoroughly logical mind and difficulties interacting with other people. It also manages to convey the frustrations of those who care for children with special needs.  An excellent if psychologically dissociating read. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-emperor-of-all-maladies-by-siddhartha-mukherjee&#34;&gt;The Emperor of All Maladies by Siddhartha Mukherjee&lt;/h3&gt;

&lt;p&gt;A biography of cancer punctuated with the experiences of the author as a practising oncologist. A perfect blend of scientific exposition and dramatic narrative. The vivid descriptions of biological processes are accessible and the metaphors absolutely exemplary. Also included is a history of the propaganda war waged by tobacco companies and cancer researchers. If you were unaware of the state of contemporary cancer treatments, it will leave you a lot more informed but possibly also a bit worried. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;midnight-s-children-by-salman-rushdie&#34;&gt;Midnight&amp;rsquo;s Children by Salman Rushdie&lt;/h3&gt;

&lt;p&gt;A story that willfully defies description. Notionally about 1001 children whose destinies are magically intertwined with that of independent India. A narrative packed with digressions, deliberate false steps and allegorical insinuations coupled with immensely funny and brilliant prose. The book captures the essence of everyday Indian life with both the magnificent and the squalid. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;sapiens-a-brief-history-of-humankind-by-yuval-noah-harari&#34;&gt;Sapiens: A Brief History of Humankind by Yuval Noah Harari&lt;/h3&gt;

&lt;p&gt;Like Guns, Germs and Steel but even grander. The sort of book that completely changes one&amp;rsquo;s perspective. The book is full of big ideas ranging from the power of collective delusions, the relationship between wheat and humans and the deep unconscious effects of advertising. Hands down the best book I read in 2017. Would highly recommend.&lt;/p&gt;

&lt;h3 id=&#34;norse-mythology-by-neil-gaiman&#34;&gt;Norse Mythology by Neil Gaiman&lt;/h3&gt;

&lt;p&gt;A short but gripping and suspenseful retelling of the foundational myths of the Norse pantheon; stories of how Odin, Thor and Loki came to be and how they would fall. The prose is full of witticisms and frequently blurs the distinction between metaphor and reality. Overall, a delightful read. Would Recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-selfish-gene-by-richard-dawkins&#34;&gt;The Selfish Gene by Richard Dawkins&lt;/h3&gt;

&lt;p&gt;An immensely readable treatise on the gene-centred view of evolution by the high priest of New Atheism. The title really does the book injustice, it deals as much with the altruism of individuals as it does with the selfishness of genes. Dawkins also introduces the concept of a meme: a unit for human cultural evolution. Would highly recommend.&lt;/p&gt;

&lt;h3 id=&#34;fahrenheit-451-by-ray-bradbury&#34;&gt;Fahrenheit 451 by Ray Bradbury&lt;/h3&gt;

&lt;p&gt;A dystopian novel about a future where books are outlawed and firemen burn any that are found. It can be read both as a criticism of censorship as well as that of mass media. Perhaps the second theme is more relevant today in the age of viral media than it was in Bradbury&amp;rsquo;s time. While a good read overall, the prose does come off as a bit snobbish. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;black-swan-by-nassim-taleb&#34;&gt;Black Swan by Nassim Taleb&lt;/h3&gt;

&lt;p&gt;An annoyingly long-winded, insufferably pompous and thoroughly grating account of the disproportionate effects of unforeseen events. Much of the book reads like a self-aggrandizing rant. While there are a few good ideas in the book, it could have easily been cut to a third of its size without losing anything of value. Skip the book and listen to one of Taleb&amp;rsquo;s lecture instead. Would not recommend.&lt;/p&gt;

&lt;h3 id=&#34;foucault-s-pendulum-by-umberto-eco-as-translated-by-william-weaver&#34;&gt;Foucault&amp;rsquo;s Pendulum by Umberto Eco as translated by William Weaver&lt;/h3&gt;

&lt;p&gt;Described as The Thinking Man&amp;rsquo;s Da Vinci Code, it&amp;rsquo;s a satirical exposition of people&amp;rsquo;s desire to believe their own version of the truth. Chock full of allusions and references, and incredibly dense, it certainly is not an easy or light read. The plot and characters are hilarious and the writing extremely clever. Reading this, one might end up feeling mentally inadequate. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-raj-at-war-by-yasmin-khan&#34;&gt;The Raj at War by Yasmin Khan&lt;/h3&gt;

&lt;p&gt;Subtitled A People’s History of India’s Second World War, Yasmin Khan does an excellent job collating the experiences of ordinary Indians caught up in the war. There are accounts of not just soldiers but also lascars, nurses, labourers and peasants. The horrors of the Bengal famine are captured in all its gory detail. Also shown is the birth of India&amp;rsquo;s all-powerful and hopelessly apathetic babudom and the police state. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;snow-crash-by-neal-stephenson&#34;&gt;Snow Crash by Neal Stephenson&lt;/h3&gt;

&lt;p&gt;An absurdist, dystopian science fiction novel dealing with elements of history, linguistics, anthropology, religion, computer science, politics, cryptography, memetics and philosophy. Primarily, the plot revolves around information and how it affects humans. The difference between the workings of a man (Or for that matter, a beast) and a machine is frequently blurred to great effect. The book also popularised the term avatar meaning a virtual persona. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;deep-work-by-cal-newport&#34;&gt;Deep Work by Cal Newport&lt;/h3&gt;

&lt;p&gt;The subtitle, Rules for Focused Success in a Distracted World is a definite oversell. It starts off decently. The premise of modern work environments that prioritize superficial and immediate metrics over creating actual value is spot on, as is the description of viral social media platforms stealing our attention and our ability to focus. The meat of the book though, the rules are the usual self-help claptrap full of anecdotes with a dash of survivorship bias. Nevertheless, the initial part of the book makes for good reading. Some might even find the rules useful. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;a-clockwork-orange-by-anthony-burgess&#34;&gt;A Clockwork Orange by Anthony Burgess&lt;/h3&gt;

&lt;p&gt;An unabashedly dark and satirical take on the morality of free will.  The many depictions of violence carry a sense of excitement from Alex, the central character but, the book does not in any way promote violence. Large parts of the book are written in a fictional Russian influence slang which feels very natural while not harming intelligibility. The writing has an almost lyrical quality to it, especially when describing music. A short but unsettling read. Would recommend.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk @ RFC&#39;s We Love: CoAPing with the Internet of Things</title>
      <link>https://www.anmolsarma.in/post/coap-talk/</link>
      <pubDate>Sat, 14 Oct 2017 11:56:27 +0530</pubDate>
      
      <guid>https://www.anmolsarma.in/post/coap-talk/</guid>
      <description>&lt;p&gt;Gave an introductory talk on CoAP at the 5th RFC&amp;rsquo;s We Love meetup. Turnout was low, probably owing to the rains and the festive season. It was still fun and had great discussions.&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;652da89359ea40bab194a5607f4bed2b&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>DCCP: The socket type you probably never heard of</title>
      <link>https://www.anmolsarma.in/post/dccp/</link>
      <pubDate>Tue, 13 Dec 2016 23:10:50 +0530</pubDate>
      
      <guid>https://www.anmolsarma.in/post/dccp/</guid>
      <description>

&lt;p&gt;&lt;em&gt;TL;DR: DCCP is a relatively newer transport layer protocol which draws from both TCP and UDP. Jump straight to the &lt;a href=&#34;#example-in-c&#34;&gt;example C code&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;background&#34;&gt;Background&lt;/h2&gt;

&lt;p&gt;Historically, the majority of the traffic on the Internet has been over &lt;a href=&#34;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&#34;&gt;TCP&lt;/a&gt; which provides a reliable connection-oriented stream between two hosts. &lt;a href=&#34;https://en.wikipedia.org/wiki/User_Datagram_Protocol&#34;&gt;UDP&lt;/a&gt; has been mainly used by applications whose brief transfers would be unacceptably slowed by TCP&amp;rsquo;s connection establishment overhead or those for which timeliness is more important than reliability. However, the increasing use of UDP for applications such as internet telephony and streaming media which transfer a large amount of data can lead to significant &lt;a href=&#34;https://en.wikipedia.org/wiki/Network_congestion&#34;&gt;network congestion&lt;/a&gt;. Since unlike TCP, UDP provides no inherent congestion control mechanism, an application can send UDP datagrams at a much higher rate than the available path capacity and cause congestion along the path. Increased congestion may lead to delays, packet loss and the degradation of the network&amp;rsquo;s quality of service.&lt;/p&gt;

&lt;p&gt;Applications and protocols that choose to use UDP as their transport must, therefore, employ mechanisms to prevent congestion and to establish some degree of fairness with concurrent traffic so that the network remains usable. A prominent example of such a congestion control scheme is &lt;a href=&#34;https://en.wikipedia.org/wiki/LEDBAT&#34;&gt;LEDBAT&lt;/a&gt; employed by &lt;a href=&#34;https://en.wikipedia.org/wiki/BitTorrent&#34;&gt;BitTorrent&lt;/a&gt;. However, implementing a congestion control scheme is difficult, time-consuming and error-prone. Multiple non-standard implementations also make it difficult to reason about how applications would respond to network congestion. &lt;a href=&#34;https://en.wikipedia.org/wiki/Datagram_Congestion_Control_Protocol&#34;&gt;DCCP&lt;/a&gt; - Datagram Congestion Control Protocol is intended to mitigate this problem as a transport for unreliable datagrams with built-in congestion control.&lt;/p&gt;

&lt;p&gt;From an application programmer&amp;rsquo;s perspective, DCCP differs from UDP by providing four additional features:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Explicit connection establishment between hosts&lt;/li&gt;
&lt;li&gt;Selectable congestion control schemes&lt;/li&gt;
&lt;li&gt;Path MTU discovery to avoid fragmentation&lt;/li&gt;
&lt;li&gt;Service Codes for identifying applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;DCCP makes use of Explicit Congestion Notification but it is transparent the  application. DCCP is designed to leave additional functionality such as reliability or Forward Error Correction (FEC) to be layered on top, as and when required rather than at the protocol level itself.&lt;/p&gt;

&lt;h2 id=&#34;explicit-connection-establishment&#34;&gt;Explicit connection establishment&lt;/h2&gt;

&lt;p&gt;The connection establishment semantics of DCCP mirror those of TCP with a client that actively connects to a server that is passively listening on a port. DCCP connections are bidirectional. Logically, however, a DCCP connection consists of two separate unidirectional connections, called half-connections. Each half-connection is a one-way, unreliable datagram pipe. The rationale for this explained in the next section.&lt;/p&gt;

&lt;h2 id=&#34;selectable-congestion-control-schemes&#34;&gt;Selectable congestion control schemes&lt;/h2&gt;

&lt;p&gt;TCP implements congestion control entirely transparently to the application. While it is possible to configure the host to use a specific variant, there is no way for the application to discover which congestion control scheme is in force, let alone negotiate one. DCCP, however, can cater to the different needs of applications by allowing applications to negotiate the congestion control schemes. In fact, each of the half-connections can use a different scheme, allowing for greater control.&lt;/p&gt;

&lt;p&gt;Congesting the network by sending data at a rate that is faster than the slowest link between the endpoints will overwhelm it. This may lead to packet loss leading to retransmissions which may, in turn, lead to further congestion. The solution to this problem is to start transmitting data at a slow rate on a new connection and to then ramp up the speed until packet loss is detected. The transmission rate may then be scaled back until no further packet loss occurs. The optimum speed at which to transfer data  will change with network conditions over the life of the connection. Congestion control schemes differ in how packet loss is estimated and the rate at which is the transmission speed is ramped up or scaled back. DCCP congestion control schemes are denoted by Congestion Control Identifiers - CCIDs. Currently, three CCIDs have been formally specified:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4341&#34;&gt;CCID 2&lt;/a&gt; -  TCP-like Congestion Control:&lt;/strong&gt; A quick reacting scheme modelled after TCP which will rapidly ramp up speed to take advantage of available bandwidth and also rapidly scale back when congestion is detected. Suitable for applications that can handle large swings in transmission rates.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc5348&#34;&gt;CCID 3&lt;/a&gt; - TCP-Friendly Rate Control (TFRC):&lt;/strong&gt; A slower reacting scheme intended to be friendly to concurrent TCP flows in the network. Provides a relatively smoother sending rate at the expense of possibly not utilising all available bandwidth. Suitable for media streaming applications that prefer to minimise abrupt changes in the sending rate.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://tools.ietf.org/html/rfc4828&#34;&gt;CCID 4&lt;/a&gt; - TCP-Friendly Rate Control for Small Packets (TFRC-SP):&lt;/strong&gt; An experimental scheme for applications that use a small datagram size and those that change their sending rate by varying the datagram size.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition, the Linux kernel&amp;rsquo;s &lt;a href=&#34;https://github.com/uoaerg/linux-dccp&#34;&gt;DCCP Test Tree&lt;/a&gt; contains an experimental implementation of a scheme modelled after &lt;a href=&#34;https://en.wikipedia.org/wiki/CUBIC_TCP&#34;&gt;TCP CUBIC&lt;/a&gt;. There is also a mode that disables congestion control altogether for &lt;em&gt;UDP-like&lt;/em&gt; behaviour.&lt;/p&gt;

&lt;h2 id=&#34;pmtu-discovery&#34;&gt;PMTU discovery&lt;/h2&gt;

&lt;p&gt;Data between two internet hosts is transferred transmitted as a series of IP packets that pass through intermediate links. Each of these links has a maximum packet size or maximum transmission unit (MTU) that it can transmit without having to break it up into smaller fragments. The largest packet size that does not require fragmentation anywhere along a path is referred to as the path maximum transmission unit or PMTU. Applications can usually get better error tolerance by producing packets smaller than the PMTU. DCCP defines a maximum packet size (MPS) based on the PMTU and the congestion control scheme used for each connection. DCCP implementations will not send any packet bigger than the MPS and instead return an appropriate error to the application. The application can query the DCCP stack for the current MPS and restrict itself from sending datagrams larger than this value and thereby avoid &lt;a href=&#34;https://en.wikipedia.org/wiki/IP_fragmentation&#34;&gt;fragmentation&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;service-codes&#34;&gt;Service Codes&lt;/h2&gt;

&lt;p&gt;DCCP defines a 32 bit Service Code to disambiguate between multiple applications associated with a single a server port. The client specifies the Service Code it wants to connect to and this is used to identify the intended service or application to process a DCCP connection request. Essentially, Service Codes provide an additional level of indirection for connection multiplexing. A server listening on a port may be associated with multiple Service Codes but a client may have only one Service Code, indicating the application it wishes to connect to.&lt;/p&gt;

&lt;h2 id=&#34;usage&#34;&gt;Usage&lt;/h2&gt;

&lt;p&gt;The mainline Linux kernel has included DCCP support since &lt;a href=&#34;https://lwn.net/Articles/149756/&#34;&gt;2.6.14&lt;/a&gt; and mainstream distributions like Ubuntu enable it by default. However, to get the newer experimental features, you will have to build the kernel from the DCCP Test Tree. Or you can also grab the latest stable kernel release merged with the experimental DCCP changes from &lt;a href=&#34;https://github.com/unmole/linux-dccp/releases/latest&#34;&gt;here&lt;/a&gt;. Be sure to enable all the CCIDs in the kernel configuration in &lt;em&gt;Networking Support&lt;/em&gt; &amp;ndash;&amp;gt; &lt;em&gt;Networking Options&lt;/em&gt; &amp;ndash;&amp;gt; &lt;em&gt;The DCCP Protocol&lt;/em&gt; &amp;ndash;&amp;gt; &lt;em&gt;DCCP CCIDs Configuration&lt;/em&gt;. Like the Debian Installation Guide Says, &amp;ldquo;&lt;em&gt;Don&amp;rsquo;t be afraid to try compiling the kernel. It&amp;rsquo;s fun and profitable.&lt;/em&gt;&amp;rdquo; For now, Linux is the only operating system supporting native DCCP, unless you count the patch for an ancient version of FreeBSD.&lt;/p&gt;

&lt;h2 id=&#34;example-in-c&#34;&gt;Example in C&lt;/h2&gt;

&lt;p&gt;The server and client look almost exactly the same as their TCP counterparts with the exception fo the socket type and setting of the service code. The client uses &lt;em&gt;getsockopt()&lt;/em&gt; to read the current maximum packet size. Reading the available CCIDs on the host is shown in &lt;strong&gt;probe.c&lt;/strong&gt;. As libc doesn&amp;rsquo;t still have a &lt;strong&gt;netinet/dccp.h&lt;/strong&gt; header, you will have to get the required constants from the kernel sources or directly use the &lt;strong&gt;dccp.h&lt;/strong&gt; header below. &lt;a href=&#34;https://www.anmolsarma.in/dl/dccp_socket_example.tar.gz&#34;&gt;Download Code&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;server.c&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;#34;dccp.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080&#34;&gt;#define PORT 1337
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define SERVICE_CODE 42
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;error_exit&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;str)
{
	perror(str);
	exit(errno);
}

&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;**&lt;/span&gt;argv)
{
	&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; listen_sock &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; socket(AF_INET, SOCK_DCCP, IPPROTO_DCCP);
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (listen_sock &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;socket&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; sockaddr_in servaddr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; {
		.sin_family &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; AF_INET,
		.sin_addr.s_addr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; htonl(INADDR_ANY),
		.sin_port &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; htons(PORT),
	};

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (setsockopt(listen_sock, SOL_SOCKET, SO_REUSEADDR, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;) {
		       &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;}, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;)))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;setsockopt(SO_REUSEADDR)&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (bind(listen_sock, (&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;servaddr, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(servaddr)))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;bind&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// DCCP mandates the use of a &amp;#39;Service Code&amp;#39; in addition the port
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (setsockopt(listen_sock, SOL_DCCP, DCCP_SOCKOPT_SERVICE, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;) {
		       htonl(SERVICE_CODE)}, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;)))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;setsockopt(DCCP_SOCKOPT_SERVICE)&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (listen(listen_sock, &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;listen&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; (;;) {

		printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Waiting for connection...&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;);

		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; sockaddr_in client_addr;
		socklen_t addr_len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(client_addr);

		&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; conn_sock &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; accept(listen_sock, (&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;)&lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;client_addr, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;addr_len);
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (conn_sock &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;) {
			perror(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;accept&amp;#34;&lt;/span&gt;);
			&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;continue&lt;/span&gt;;
		}

		printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Connection received from %s:%d&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;,
		       inet_ntoa(client_addr.sin_addr), ntohs(client_addr.sin_port));

		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; (;;) {
			&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;char&lt;/span&gt; buffer[&lt;span style=&#34;color:#666&#34;&gt;1024&lt;/span&gt;];
			&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Each recv() will read only one individual message.
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Datagrams, not a stream!
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;			&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; ret &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; recv(conn_sock, buffer, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(buffer), &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;);
			&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (ret &lt;span style=&#34;color:#666&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
				printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Received: %s&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;, buffer);
			&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;else&lt;/span&gt;
				&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;break&lt;/span&gt;;

		}

		close(conn_sock);
	}
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;client.c&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;string.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;unistd.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;arpa/inet.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;errno.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;#34;dccp.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;error_exit&lt;/span&gt;(&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;str)
{
	perror(str);
	exit(errno);
}

&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;main&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; argc, &lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;char&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;argv[])
{
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (argc &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt;) {
		printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Usage: ./client &amp;lt;server address&amp;gt; &amp;lt;port&amp;gt; &amp;lt;service code&amp;gt; &amp;lt;message 1&amp;gt; [message 2] ... &lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;);
		exit(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
	}
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; sockaddr_in server_addr &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; {
		.sin_family &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; AF_INET,
		.sin_port &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; htons(atoi(argv[&lt;span style=&#34;color:#666&#34;&gt;2&lt;/span&gt;])),
	};

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#666&#34;&gt;!&lt;/span&gt;inet_pton(AF_INET, argv[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;], &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;server_addr.sin_addr.s_addr)) {
		printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Invalid address %s&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;, argv[&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;]);
		exit(&lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;);
	}

	&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; socket_fd &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; socket(AF_INET, SOCK_DCCP, IPPROTO_DCCP);
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (socket_fd &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;socket&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (setsockopt(socket_fd, SOL_DCCP, DCCP_SOCKOPT_SERVICE, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;) {htonl(atoi(argv[&lt;span style=&#34;color:#666&#34;&gt;3&lt;/span&gt;]))}, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt;)))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;setsockopt(DCCP_SOCKOPT_SERVICE)&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (connect(socket_fd, (&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;struct&lt;/span&gt; sockaddr &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;server_addr, &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(server_addr)))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;connect&amp;#34;&lt;/span&gt;);

	&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Get the maximum packet size
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;	uint32_t mps;
	socklen_t res_len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;sizeof&lt;/span&gt;(mps);
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (getsockopt(socket_fd, SOL_DCCP, DCCP_SOCKOPT_GET_CUR_MPS, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;mps, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;res_len))
		error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;getsockopt(DCCP_SOCKOPT_GET_CUR_MPS)&amp;#34;&lt;/span&gt;);
	printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;Maximum Packet Size: %d&lt;/span&gt;&lt;span style=&#34;color:#b62;font-weight:bold&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;&lt;/span&gt;, mps);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;4&lt;/span&gt;; i &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; argc; i&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;) {
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (send(socket_fd, argv[i], strlen(argv[i]) &lt;span style=&#34;color:#666&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;) &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;)
			error_exit(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;send&amp;#34;&lt;/span&gt;);
	}

	&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Wait for a while to allow all the messages to be transmitted
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;	usleep(&lt;span style=&#34;color:#666&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;1000&lt;/span&gt;);

	close(socket_fd);
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;probe.c&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;sys/socket.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;lt;netinet/in.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#080&#34;&gt;&amp;#34;dccp.h&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#00a000&#34;&gt;main&lt;/span&gt;()
{
	&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; sock_fd &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; socket(AF_INET, SOCK_DCCP, IPPROTO_DCCP);

	&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// Check the congestion control schemes available
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;	socklen_t res_len &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;;
	uint8_t ccids[&lt;span style=&#34;color:#666&#34;&gt;6&lt;/span&gt;];
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;if&lt;/span&gt; (getsockopt(sock_fd, SOL_DCCP, DCCP_SOCKOPT_AVAILABLE_CCIDS, ccids, &lt;span style=&#34;color:#666&#34;&gt;&amp;amp;&lt;/span&gt;res_len)) {
		perror(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;getsockopt(DCCP_SOCKOPT_AVAILABLE_CCIDS)&amp;#34;&lt;/span&gt;);
		&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#666&#34;&gt;1&lt;/span&gt;;
	}

	printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34;%d CCIDs available:&amp;#34;&lt;/span&gt;, res_len);
	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;for&lt;/span&gt; (&lt;span style=&#34;color:#0b0;font-weight:bold&#34;&gt;int&lt;/span&gt; i &lt;span style=&#34;color:#666&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#666&#34;&gt;0&lt;/span&gt;; i &lt;span style=&#34;color:#666&#34;&gt;&amp;lt;&lt;/span&gt; res_len; i&lt;span style=&#34;color:#666&#34;&gt;++&lt;/span&gt;)
		printf(&lt;span style=&#34;color:#b44&#34;&gt;&amp;#34; %d&amp;#34;&lt;/span&gt;, ccids[i]);

	&lt;span style=&#34;color:#a2f;font-weight:bold&#34;&gt;return&lt;/span&gt; res_len;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;dccp.h&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;/* This file only contains constants necessary for user space to call
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt; * into the kernel and thus, contains no copyrightable information. */&lt;/span&gt;

&lt;span style=&#34;color:#080&#34;&gt;#ifndef DCCP_DCCP_H
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_DCCP_H
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// From the kernel&amp;#39;s include/linux/socket.h
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define SOL_DCCP                        269
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;// From kernel&amp;#39;s include/uapi/linux/dccp.h
&lt;/span&gt;&lt;span style=&#34;color:#080;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_SERVICE            2
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_CHANGE_L           3
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_CHANGE_R           4
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_GET_CUR_MPS        5
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_SERVER_TIMEWAIT    6
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_SEND_CSCOV         10
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_RECV_CSCOV         11
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_AVAILABLE_CCIDS    12
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_CCID               13
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_TX_CCID            14
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_RX_CCID            15
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_QPOLICY_ID         16
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_QPOLICY_TXQLEN     17
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_CCID_RX_INFO       128
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;#define DCCP_SOCKOPT_CCID_TX_INFO       192
&lt;/span&gt;&lt;span style=&#34;color:#080&#34;&gt;&lt;/span&gt;
&lt;span style=&#34;color:#080&#34;&gt;#endif //DCCP_DCCP_H&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&#34;caveats-and-conclusion&#34;&gt;Caveats and Conclusion&lt;/h2&gt;

&lt;p&gt;DCCP is not mainstream. It is not widely deployed or even supported. Documentation is sparse. Although Linux DCCP NAT is functional, many intermediate boxes will probably just drop DCCP traffic. DCCP is the Fixed-gear bicycle of Layer 4, it is the ultimate hipster transport.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Books I Read in 2015</title>
      <link>https://www.anmolsarma.in/post/books-2015/</link>
      <pubDate>Sun, 03 Jan 2016 21:36:15 +0530</pubDate>
      
      <guid>https://www.anmolsarma.in/post/books-2015/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://www.anmolsarma.in/images/2016/books-2015.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;india-after-gandhi-by-ramachandra-guha&#34;&gt;India After Gandhi by Ramachandra Guha&lt;/h3&gt;

&lt;p&gt;A thoroughly sourced, brilliantly written and mostly objective history of India. Guha’s scholarship and unbiased account really shines throughout the book. Save for one non-sequitur and one inaccurate and one might say unfair characterization there is nothing to complain about. The rare photographs included in the book are fascinating by themselves. Reading the book makes you wonder if it is Indian history itself or Guha’s writing that makes it such a page turner. Definitely the best book I’ve read this year. Would  recommend.&lt;/p&gt;

&lt;h3 id=&#34;patriots-and-partisans-by-ramachandra-guha&#34;&gt;Patriots and Partisans by Ramachandra Guha&lt;/h3&gt;

&lt;p&gt;A collection of essays on India from a self proclaimed liberal centrist. Chock full of telling anecdotes and witty insights.  While it is interesting on it’s own, it is nowhere as gripping as India After Gandhi. Guha is definitely a better scholar than he is a polemicist but he really excels as a storyteller. The chapter describing how the Congress Dynasty and its sychophants destroyed an insititution Guha personally cherished was probably the best of the lot. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;ramayana-by-valmiki-as-retold-by-c-rajagopalachari&#34;&gt;Ramayana by Valmiki as retold by C. Rajagopalachari&lt;/h3&gt;

&lt;p&gt;A highly condensed and simplified retelling of the timeless epic from one &lt;em&gt;bhakta&lt;/em&gt; intended for prospective young &lt;em&gt;bhaktas&lt;/em&gt;. But for me, Rajaji’s commentary and comparison between different versions of the epic are more interesting than the actual narrative. The standard trope of digressing to heap praise on the protagonist slackens the pace and gets rather irritating after the first few times. So irritating that finishing this book took me far longer than it should have, given its size. Would not recommend.&lt;/p&gt;

&lt;h3 id=&#34;picture-of-dorian-grey-by-oscar-wilde&#34;&gt;Picture of Dorian Grey by Oscar Wilde&lt;/h3&gt;

&lt;p&gt;Beneath the endlessly quotable characters and beyond the absurd supernatural premise lies a much deeper message. Or possibly several such messages. Sadly, I for one have no idea what they are supposed to be. Wilde’s self-indulgent prose aside, I found the book incredibly difficult to read and had to force myself to finish it. Unlike almost everyone else I know who has read the book, it had no discernible impact on me except for making me a little more choosy about what I read. Would not recommend&lt;/p&gt;

&lt;h3 id=&#34;a-short-history-of-nearly-everything-by-bill-bryson&#34;&gt;A Short History Of Nearly Everything by Bill Bryson&lt;/h3&gt;

&lt;p&gt;A very lucid and easily digestible survey of what we know and how we know what we know. Funny, insightful and entertaining, Bryson’s curiosity and style makes even geology seem interesting. While doing a good job of explaining the science and the history behind the science, it also manages to capture the human side of the countless passionate men and women who dedicate their lives to advancing the state of human knowledge. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-ultimate-hitchhiker-s-guide-to-the-galaxy-by-douglas-adams&#34;&gt;The Ultimate Hitchhiker&amp;rsquo;s Guide to the Galaxy by Douglas Adams&lt;/h3&gt;

&lt;p&gt;Technically not one book but &lt;em&gt;&amp;ldquo;a trilogy of five&amp;rdquo;&lt;/em&gt;. The Hitchhiker&amp;rsquo;s Guide to the Galaxy and The Restaurant at the End of the Universe are absolutely hilarious. Life, the Universe and Everything, So Long, and Thanks for All the Fish and Mostly Harmless are slightly less so. It&amp;rsquo;s probably a bad idea to go through all of them in one go because the absurdity gets a little too much to handle. An otherwise brilliant collection. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;siddhartha-by-hermann-hesse-as-translated-by-hilda-rosner&#34;&gt;Siddhartha by Hermann Hesse as translated by Hilda Rosner&lt;/h3&gt;

&lt;p&gt;The best thing about this book is its size. At barely 150 pages, you don’t waste too much time on this New Age twaddle full of knowing smiles, hearts spontaneously bursting with joy and characters who for some reason resemble various fruit and vegetables. Much like the narrative, Hesse’s attempt at reproducing Sanskrit idioms feels jarring and pointless.  The only realization I had from reading this book was that the eponymous protagonist went about the ashramas of life in a vipareeta order. Would not recommend.&lt;/p&gt;

&lt;h3 id=&#34;train-to-pakistan-by-khushwant-singh&#34;&gt;Train to Pakistan by Khushwant Singh&lt;/h3&gt;

&lt;p&gt;A fictional account of a very real disaster. Kushwant Singh’s prose is simple, engaging and very readable. The characters  and the setting feel all too familiar and real as do the norms and social memes. The book does a very good job of capturing the senselessness of the violence and the tribal rationalizations invoked to justify it. The ending, while a little over the top, does manage to leave an emotional impact. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;if-it-s-monday-it-must-be-madurai-by-srinath-perur&#34;&gt;If It&amp;rsquo;s Monday It Must Be Madurai by Srinath Perur&lt;/h3&gt;

&lt;p&gt;This was the first travel book I’ve ever read and it did not disappoint. Perur’s book is as much about the people he traveled with and their reasons  for travelling as it is bout the places themselves. The observations of the stereotypical Indian traits and notions are spot on and the commentary is effortlessly funny. The book is perhaps more accurately subtitled A Conducted tour of the Indian Traveler. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;brave-new-world-by-aldous-huxley&#34;&gt;Brave New World by Aldous Huxley&lt;/h3&gt;

&lt;p&gt;The book most frequently compared to and contrasted with George Orwell’s dystopian 1984. Huxley’s  take on dystopia is an anti-utopia centered around the cult of Henry Ford. While the premise is decent, the over the top caricature of Fordian society as the opposite of what is Huxley’s sense of morality does reduce the overall impact and the result is no where as haunting as 1984’s Big Brother. The book is short enough to finish in a couple of sittings and it is probably best to finish it quickly as I found it difficult to read when stretched out. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-accidental-prime-minister-by-sanjaya-baru&#34;&gt;The Accidental Prime Minister by Sanjaya Baru&lt;/h3&gt;

&lt;p&gt;After the 2008 financial crisis, as major economies of the world went into recession, the Indian growth story seemed to remain intact. International journalists looking for post hoc explanation began to hail Dr. Manmohan Singh as the economist prime minister who held it together. Unblemished by the taint of corruption that was to follow, at this point Dr. Singh enjoyed international recognition and renown. In this supposed tell-all book, Sanjaya Baru claims credit for the successful PR campaign he undertook as the PM’s spin doctor. While book is in no way a revelation, it does flesh out the details and put things into perspective about how the UPA government and the Congress party functioned. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;arthashastra-by-kautilya-as-translated-and-rearranged-by-l-n-rangarajan&#34;&gt;Arthashastra by Kautilya as translated and rearranged by L.N. Rangarajan&lt;/h3&gt;

&lt;p&gt;As if taking a cue from the success of Art of War themed self-help books, distilled Kautilyan teachings re-purposed for the modern corporate have become popular of late. Not wanting to be given truisms of some random author’s reading into Kautilya, I went to the original source. While I couldn’t find any universally applicable ancient wisdom, reading the Arthashastra was enjoyable. Rather than the simplified, whitewashed and sometimes politically colored descriptions of ancient India of history books, the Arthashastra is a contemporary insider’s account of ancient Indian society or at least an idealized conception of it. But given its nature, the book is filled with lists and tables and permutations and gradations. Skimming through these and focusing on more subjective descriptions makes for a very interesting reading. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;burmese-days-by-george-orwell&#34;&gt;Burmese Days by George Orwell&lt;/h3&gt;

&lt;p&gt;Based on Orwell’s time as an officer of the Indian Imperial Police, Burmese Days pulls no punches while describing the colonial experience. The hypocrisy and cognitive dissonance of the British, the opportunism and corruption of native officials, the vanity and the pointless pursuit of prestige by everyone involved, the frustrated attempts at finding love an companionship and finally the frailty of the human condition, Orwell tackles it all. While nowhere near as popular as Orwell’s other books, Burmese Days is certainly an excellent book. Would recommend.&lt;/p&gt;

&lt;h3 id=&#34;who-was-shivaji-by-govind-pansare&#34;&gt;Who Was Shivaji by Govind Pansare&lt;/h3&gt;

&lt;p&gt;This was not meant to be a book. Expanded from an earlier speech, Who Was Shivaji would have remained a niche political pamphlet hadn’t Govind Pansare been murdered in cold blood. The comrades of Left World Books seemed to have no ethical or ideological qualms about exploiting the death of its author. Even when printed using the ridiculously large font, the book still doesn’t reach a hundred pages. There just isn&amp;rsquo;t enough material to justify turning into a book. As for the material that is there, it is mostly unremarkable stuff. The most interesting parts of the book were actually the letters written by Shivaji, reproduced in the appendix. By far, the most disappointing book of the year. Would not recommend.&lt;/p&gt;

&lt;h3 id=&#34;the-great-indian-novel-by-shashi-tharoor&#34;&gt;The Great Indian Novel by Shashi Tharoor&lt;/h3&gt;

&lt;p&gt;Puns, allusions and witticisms that&amp;rsquo;s what The Great Indian Novel is made of. The title being a reference to Mahabharata, Sashi Tharoor’s debut novel tells the story of modern India using characters from the epic. Tharoor’s style is engaging, extremely irreverent and incredibly funny. Taking shots at everyone from Gandhi to Nehru to the Indian media with a few self-referential jokes about NRI’s and diplomats thrown in for good measure. After an excellent start, and buildup, the plot sags a bit. Given the subject matter, there probably is no closure possible but the climax does feel a bit week. Overall a decent way to close the year. Would recommend.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lazy Performance Comparison of WordPress and Ghost</title>
      <link>https://www.anmolsarma.in/post/lazy-performance-comparison-of-wordpress-and-ghost/</link>
      <pubDate>Sat, 04 Apr 2015 18:40:03 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/lazy-performance-comparison-of-wordpress-and-ghost/</guid>
      <description>&lt;p&gt;So, I switched to a new blogging platform. Again. After trying out a static approach, I moved back to a WordPress when I stumbled across &lt;a href=&#34;https://www.openshift.com/&#34;&gt;OpenShift&lt;/a&gt; (&lt;em&gt;And their fantastic &lt;a href=&#34;https://www.openshift.com/products/pricing/plan-comparison&#34;&gt;free plan&lt;/a&gt;&lt;/em&gt;). That was well over two years ago. In the meantime, I hardly blogged and didn&amp;rsquo;t really run into any issues but the blog did feel a tad sluggish.&lt;/p&gt;

&lt;p&gt;Fast-forward to yesterday when I had a sudden impulse to try something new. Ghost looked interesting so, I spun up an install using OpenShift&amp;rsquo;s &lt;a href=&#34;https://github.com/openshift-quickstart/openshift-ghost-quickstart&#34;&gt;Ghost Quick-Start&lt;/a&gt; and proceeded to &lt;a href=&#34;https://ghostforbeginners.com/how-to-transfer-blog-posts-from-wordpress-to-ghost/&#34;&gt;import data from my WordPress&lt;/a&gt; blog which turned out to be pretty painless.&lt;/p&gt;

&lt;p&gt;Given the same resources (&lt;em&gt;Small Gear&lt;/em&gt;) and same amount tweaking (i.e. none, using OpenShift&amp;rsquo;s quickstart installation defaults and using the default themes with no plugins), Ghost certainly &lt;em&gt;felt&lt;/em&gt; a lot faster but how fast was it really? To answer that (&lt;em&gt;And because I apparently have nothing better to do on a Friday night&lt;/em&gt;), I started a simultaneous stress test on WordPress and Ghost using &lt;a href=&#34;http://blazemeter.com/&#34;&gt;BlazeMeter&lt;/a&gt; with a maximum of 50 users. The answer, as turns out is a &lt;strong&gt;helluva lot faster!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;style type=&#34;text/css&#34;&gt;
table{
border-collapse: collapse;
border: 1px solid black;
width: 100%;
}
table td{
border: 1px solid black;
padding: 5px;
}
&lt;/style&gt;
&lt;table&gt;
&lt;tr&gt;&lt;td&gt; &lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Avg. Latency&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Avg. Response Time&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;90%&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;95%&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;99%&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Min&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;Max&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Ghost&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;255.05&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;752.28&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;739&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;793&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4647&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;602&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7240&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Wordpress&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;12129.55&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;21238.06&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;33641&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;37725&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;52178&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2273&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;67093&lt;/td&gt;
&lt;/tr&gt;&lt;/table&gt;&lt;/p&gt;

&lt;p&gt;On average, Ghost&amp;rsquo;s response is &lt;strong&gt;28 times faster&lt;/strong&gt; and its latency is &lt;strong&gt;47 times lower&lt;/strong&gt;. Looking at how the two respond to load is interesting:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.anmolsarma.in/images/2015/04/Ghost-wordpress-responsetime.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.anmolsarma.in/images/2015/04/Ghost_Wordpress_latency.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Ghost doesn&amp;rsquo;t even seem to break a sweat while WordPress starts panting quite early into the run. The longest it took for Ghost to respond was &lt;strong&gt;7240 ms&lt;/strong&gt; which is almost a whole order of a magnitude faster than Wondpress&amp;rsquo;s &lt;strong&gt;67093 ms&lt;/strong&gt;. The shortest time for Ghost is &lt;strong&gt;602 ms&lt;/strong&gt;, a comfortable &lt;strong&gt;3.77 times&lt;/strong&gt; better than &lt;strong&gt;2273 ms&lt;/strong&gt; it took WordPress.&lt;/p&gt;

&lt;p&gt;Basically Ghost crushes WordPress in this admittedly lazy and unscientific test. It is pretty similar to what others have reported. If your personal WordPress setup is struggling to keep up with traffic, you should at least consider Ghost. It doesn&amp;rsquo;t have anywhere near the number of plugins or themes as WordPress, it clearly is not as mature (&lt;em&gt;It&amp;rsquo;s still in version 0.5.10&lt;/em&gt;) but boy is it fast! As for the writing flow, I can only say its different. I&amp;rsquo;m not entirely sure if it is better than what we have been used to (&lt;em&gt;No spell check&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;I for one am quite happy I tried (&lt;em&gt;And switched to&lt;/em&gt;) Ghost. And I got a blog post out it to boot!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Art of Living Foundation&#39;s Kurshed Batliwala Debunked</title>
      <link>https://www.anmolsarma.in/post/kurshed-batliwala-debunked/</link>
      <pubDate>Sun, 28 Jul 2013 10:07:52 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/kurshed-batliwala-debunked/</guid>
      <description>&lt;p&gt;A critical look at Khurshed Batliwala’s talk, “Technology of Spirituality” delivered at Ruia College, Mumbai.&lt;/p&gt;

&lt;p&gt; 
&lt;center&gt;&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/RSHFzZmQPj0&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;Mr. Batliwala makes a number of extraordinary claims about the state of ancient Indian science and technology. Most of them however, turn out to be exaggerations, misinterpretations or outright fabrications. He then attributes all scientific progress to ‘spirituality’.&lt;/p&gt;

&lt;p&gt;The talk is nothing more than a sales pitch for Mr. Mr. Ravi Shankar’s ‘Art of Living Foundation’.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk @ EmWare: Getting started with Linux</title>
      <link>https://www.anmolsarma.in/post/talk-emware/</link>
      <pubDate>Mon, 27 May 2013 06:30:00 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/talk-emware/</guid>
      <description>&lt;p&gt;Gave an introductory talk on Linux, basically a rehash of the &lt;a href=&#34;http://www.anmolsarma.in/talk-klu/&#34;&gt;talk I gave at KLU&lt;/a&gt; a couple of years ago.&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;cfa24e0065b4491d8c06a71a514df295&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Talk @ EmWare: Getting Started with Git</title>
      <link>https://www.anmolsarma.in/post/talk-emware-getting-started-with-git/</link>
      <pubDate>Fri, 17 May 2013 06:30:00 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/talk-emware-getting-started-with-git/</guid>
      <description>&lt;p&gt;Gave an introductory interactive tutorial on using Git. I couldn&amp;rsquo;t finish the slides on time but managed cover everything on the agenda.&lt;/p&gt;

&lt;p&gt;Now that the talk is done, I&amp;rsquo;m don&amp;rsquo;t feel especially inclined to complete the slides.&lt;/p&gt;

&lt;script async class=&#34;speakerdeck-embed&#34; data-id=&#34;0ed1c9358c2e4f42b4380758771770fc&#34; data-ratio=&#34;1.33333333333333&#34; src=&#34;//speakerdeck.com/assets/embed.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Defeating India&#39;s Central Monitoring System</title>
      <link>https://www.anmolsarma.in/post/defeating-the-central-monitoring-system/</link>
      <pubDate>Thu, 09 May 2013 14:08:00 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/defeating-the-central-monitoring-system/</guid>
      <description>&lt;p&gt;The Government of India has rolled out the &lt;a href=&#34;http://en.wikipedia.org/wiki/Central_Monitoring_System&#34;&gt;Central Monitoring System&lt;/a&gt; which will allow it to access any piece of data passing through an Indian service provider. This means the government can now read all your text messages, emails and call records.&lt;/p&gt;

&lt;p&gt;Because &lt;em&gt;privacy&lt;/em&gt; does not bring in votes, it is highly unlikely that any political party will oppose this system. Circumventing this system however, is rather simple using &lt;a href=&#34;http://en.wikipedia.org/wiki/Pretty_Good_Privacy&#34;&gt;PGP&lt;/a&gt; or any other &lt;em&gt;munition grade&lt;/em&gt; cryptographic scheme. So, if anyone wishes to communicate with me securely, please encrypt your message using this &lt;a href=&#34;https://www.anmolsarma.in/pgp/anmol_pgp.asc&#34;&gt;key&lt;/a&gt;, whose fingerprint should be:&lt;/p&gt;

&lt;p&gt;&lt;center&gt;&lt;code&gt;AA3C 18D8 88D6 EC67 6887  2B21 5D64 D65C 162D 0A3C&lt;/code&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;You may now put your tin-foil hat back on again.&lt;/p&gt;

&lt;p&gt;Edit: Replaced my old key with a 4096-bit RSA key.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello Again, World!</title>
      <link>https://www.anmolsarma.in/post/hello-again-world/</link>
      <pubDate>Tue, 19 Feb 2013 17:59:29 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/hello-again-world/</guid>
      <description>&lt;p&gt;Here it goes again: After a couple of attempts with Blogger, a dozen iterations with WordPress, a very brief tryst with Drupal and a false start with Bloggart, I’ve now decided to ditch dynamic content management systems and give Octopress a spin.&lt;/p&gt;

&lt;p&gt;I like the idea of a statically generated site I can deploy anywhere. I used Sphinx for a documentation once and the experience with was pretty good. However, getting Sphinx to work for a personal blog seemed to be too much work, so Octopress it is. So far I’m really happy with Octopress and with minimal tweaking, I have all the functionality I need. Hopefully, I will stick with it and actually blog this time around. Fingers crossed!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Das Blinkenlights on the MSP430 Launchpad with Linux</title>
      <link>https://www.anmolsarma.in/post/msp430-launchpad-linux/</link>
      <pubDate>Sat, 12 Jan 2013 19:06:05 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/msp430-launchpad-linux/</guid>
      <description>&lt;p&gt;TI’s &lt;a href=&#34;http://www.ti.com/tool/msp-exp430g2&#34; title=&#34;MSP430 Launchpad&#34;&gt;MSP430 LaunchPad&lt;/a&gt; development kit offers some serious bang for the buck. You get two modern 16-bit microcontrollers, a programmer-cum-debugger with pins broken out and a USB cable for less than 5 USD inclusive of shipping. TI even provides two free (as in beer) IDE’s for Windows. Linux support though was a bit sketchy when the board was first released.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.anmolsarma.in/images/2015/09/LaunchPad.jpg&#34; alt=&#34;&#34; /&gt;
 &lt;/p&gt;

&lt;p&gt;Things of course have greatly improved and getting the Launchpad to work with Linux is now a breeze. The versions of MSPGCC and MSPDebug in Ubuntu 11.10’s repositories seem to work just fine. There’s also functional Arduino fork for the MSP430 called &lt;a href=&#34;http://energia.nu/&#34; title=&#34;Energia&#34;&gt;Energia&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mole Nama: A Linux Fantasy Saga</title>
      <link>https://www.anmolsarma.in/post/mole-nama-a-linux-fantasy-saga/</link>
      <pubDate>Sun, 19 Aug 2012 18:23:22 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/mole-nama-a-linux-fantasy-saga/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Mole Nama&lt;/strong&gt;&lt;br /&gt;
&lt;em&gt;A historical account of the Mole’ani people in the Free Lands&lt;/em&gt;&lt;/p&gt;

&lt;p&gt; -Inestimabel Montcastellus&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;  We Mole’ani are a Geekic people, who like millions of other races call the Free Lands home. However, our people originally came from the other side; the Dark Lands that shall not be named. The Dark Lands were under monopolistic rule of the Borg and their brethren. Piracy was common and so were the viral diseases which accompanied the booty. Systemic crashes and ‘illegal operations’ were the order of the day. The Three Fingered Salute was often the only way out. But even then, there was the ever present danger of being crippled by a terrorizing bout of Blue Death.&lt;/p&gt;

&lt;p&gt;  In the midst of chaos, the Mole’ani saw hope. The communes of Firey Foxen and We El Sea brought some stability, the likes of which were never heard of in the Dark Lands. This coupled with the Enlightenment of Openness convinced our people that there was a better way.&lt;br /&gt;
 While the Mole’ani were eager to move to where there was freedom and openness, obtaining a passage to the other side was difficult. With their limited means, they could only go as far as the Isles of Pupey before being forced to return to the Dark Lands.&lt;/p&gt;

&lt;p&gt;  Then came redemption. The Mole’ani came to know that Benevolent Emperor of Ubunatia, determined to assist people like them, had declared the Shipet campaign and sent out his fleet. Finally, our people were able to cross the Vu’Bee Strait, landing on Ubunatian coasts in the era of the Heron.&lt;/p&gt;

&lt;p&gt;  There, they quickly assimilated and became Ubunatians in name and spirit, severing their last ties to Darkness. The Mole’ani turned into missionary paladins, helping bring in dozens of new ally races into the Free Lands. Our people and our allies traveled widely across the Free Lands, touring Ubunatia’s vassal states Kubunatia and Zubunatia and even as far as the lands of the Scarlet Caps and Green Lizards.&lt;/p&gt;

&lt;p&gt;  The Mole’ani however remained loyal Ubunatians. There was minimal dissent even during the Directional Reform of the Lynx era.Things changed with the stirring of the Unitarian Revolution. Hoping to preserve their way of life, our people sought refuge in the vassal state of Zubunatia. Their attempts to change the Zubunatian system proved disastrous, forcing them to flee North and defect to the Mint Realm.&lt;/p&gt;

&lt;p&gt;  And our people remained in peace. However, trouble started once more. The Genom clergy’s antics had caused massive outrage across the Free Lands. Ubunatia, the region’s dominant power had already parted ways with the Genom during the Revolution and refused to have anything to do with it. Refugees fled to the North in their hundreds of thousands and the Mint Realm rose in defiance.&lt;/p&gt;

&lt;p&gt;  In the far away Archinan Republic, a group of dissidents splintered from the Genom and proclaimed the Path of Mayte to defend their cherished old ways. The Mint Realm, although skeptical about Mayte’s future, immediately declared its support to the fledgling movement.&lt;br /&gt;
 At the same time, the Realm ennobled Sinamon to ensure the survival of the old ways.&lt;/p&gt;

&lt;p&gt;  In the midst of turmoil, the Mole’ani yearned for stability. They returned to the South and settled in the borderlands of Ubunatia and Zubunatia where they remain to this day.&lt;/p&gt;

&lt;p&gt;Inspired by the &lt;a href=&#34;http://www.dedoimedo.com/computers/linux-world-map.html&#34; title=&#34;Linux World Map&#34;&gt;Great Linux World Map&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk @ KLU: Linux? Say whaat?!</title>
      <link>https://www.anmolsarma.in/post/talk-klu/</link>
      <pubDate>Mon, 17 Oct 2011 21:20:38 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/talk-klu/</guid>
      <description>&lt;p&gt;Gave an introductory talk on Linux at &lt;a href=&#34;http://www.kluniversity.in/&#34;&gt;Koneru Lakshmiah University&lt;/a&gt;, with &lt;a href=&#34;http://www.elitenewb.wordpress.com/&#34;&gt;Vamsi&lt;/a&gt;following up with a talk on Bugs and Hacks as a part of the ‘workshop’ organised by the KLU Linux Users Group. With about 150 newbish students in attendance, it was fun albeit in a masochistic kind of a way.&lt;/p&gt;

&lt;p&gt;Here’s a shitty picture from the talk, courtesy of Vamsi:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.anmolsarma.in/images/2015/04/KLU-Linux-1.jpg&#34; alt=&#34;KLU Linux&#34; /&gt;
And here are the sildes:
&lt;img src=&#34;https://www.anmolsarma.in/images/2015/04/Linux-Say-whaat--2.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Edit: I lost the slides. Only this sad screenshot remains :(&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello, World!</title>
      <link>https://www.anmolsarma.in/post/hello-world-2/</link>
      <pubDate>Sun, 16 Oct 2011 17:57:01 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/hello-world-2/</guid>
      <description>&lt;p&gt;This is the 11th iteration of my blog/homepage. I’ve finally found a setup that I like (Thanks to Bloggart!) and unless I run into any major issues, I’m probably going to stick with it. Maybe now I’ll finally stop resetting the site and get down to actually blogging!&lt;/p&gt;

&lt;p&gt;Watch this space!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://www.anmolsarma.in/post/tcp-lowat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/post/tcp-lowat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.anmolsarma.in/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/about/</guid>
      <description>&lt;p&gt;Anmol Sarma is a network protocol engineer living it up in Bengaluru, India. When not referring to himself in the third person, he breaks stuff, &lt;a href=&#34;https://github.com/anmolsarma/&#34;&gt;writes code&lt;/a&gt; and knows things. Sometimes, he &lt;a href=&#34;https://www.anmolsarma.in/renders&#34;&gt;makes CG art&lt;/a&gt;. He also has a &lt;a href=&#34;https://www.anmolsarma.in/&#34;&gt;blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Drop him a line on:  &lt;code&gt;me@anmolsarma.in&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Renders</title>
      <link>https://www.anmolsarma.in/renders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.anmolsarma.in/renders/</guid>
      <description>&lt;p&gt;&lt;center&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/RussellsTeapot.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/RussellsTeapot_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Weirwood.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Weirwood_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Path.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Path_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Helmet.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Helmet_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Kubernates.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Kubernates_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Desert.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Desert_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Splash.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Splash_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.anmolsarma.in/renders/Alien.jpg&#34;&gt;&lt;img src=&#34;https://www.anmolsarma.in/renders/Alien_tb.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;
&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
